import java.util.Properties
import java.io.FileInputStream

plugins {
    id "com.android.application"
    id "com.google.gms.google-services"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
def hasKeystoreProps = keystorePropertiesFile.exists()
if (hasKeystoreProps) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.agu.agumobile"
    compileSdk = 36
    ndkVersion = flutter.ndkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions { jvmTarget = JavaVersion.VERSION_1_8 }

    defaultConfig {
        applicationId "com.agu.agumobile"
        // minSdkVersion flutter.minSdkVersion
        minSdk 23
        targetSdk = 35 // Flutter'ın otomatik ayarını geçersiz kılar ve SDK 35'i kullanır.
        versionCode 8     //her güncellemeden sonra bu değeri değiştir, yoksa appbundle ı sisteme sürüklerken hata alırsın.
        versionName "1.0.7" //her güncellemeden sonra bu değeri değiştir, yoksa appbundle ı sisteme sürüklerken hata alırsın.

        ndk { abiFilters 'armeabi-v7a','arm64-v8a','x86_64' }
    }

    signingConfigs {
        // Debug keystore her zaman mevcut
        debug {
            storeFile file("${System.properties['user.home']}/.android/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        if (hasKeystoreProps) {
            release {
                def sf = keystoreProperties['storeFile']
                if (sf == null || sf.trim().isEmpty()) {
                    throw new GradleException("key.properties içinde storeFile tanımlı değil veya boş!")
                }
                storeFile file(sf)
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // key.properties yoksa release de debug imzası ile derlesin (local/CI kırılmasın)
            signingConfig hasKeystoreProps ? signingConfigs.release : signingConfigs.debug
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
}

flutter {
    source = "../.."
}
